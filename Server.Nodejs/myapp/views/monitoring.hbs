<font size="4">
  <form action="/monitoring" method="post">
    <h2>Monitoring Sensor with code - '{{sensor}}'</h2>
    <input type="hidden" name="sensor" value="{{sensor}}"></input>
  </form>
  <br></br>
  <canvas id="graph"></canvas>
  <br></br>
  <form action="/configureMonitorSensor" method="get">
    <button type="submit">Back to Configure Monitor</button>
  </form>
  <form action="/" method="get">
    <button type="submit">Back Home</button>
  </form>
</font>
<script>
  setTimeout(function(){document.forms[0].submit();}, 5000);
  var graph;
  var xPadding = 30;
  var yPadding = 30;

  var data = [];
  var measures = [{{measures}}];
  //var timeLogs = [{{timeLogs}}];
  var len = measures.length;
  for (var i = 0; i < len; i++) {
      data.push({
          X: (i+1),
          Y: measures[i]
      });
  }

  // Returns the max Y value in our data list
  function getMaxY() {
      /*var max = 0;
      for(var i = 0; i < data.length; i ++) {
          if(data[i].Y > max) {
              max = data[i].Y;
          }
      }*/
      max = 40;
      max += 10 - max % 10;
      return max;
  }

  // Returns the max X value in our data list
  function getMaxX() {
      var max = 0;
      for(var i = 0; i < data.length; i ++) {
          if(data[i].X > max) {
              max = data[i].X;
          }
      }
      max += 10 - max % 10;
      return max;
  }

  // Return the x pixel for a graph point
  function getXPixel(val) {
      // uses the getMaxX() function
      return ((graph.width - xPadding) / getMaxX()) * val + (xPadding * 1.5);
  }

  // Return the y pixel for a graph point
  function getYPixel(val) {
      return graph.height - (((graph.height - yPadding) / getMaxY()) * val) - yPadding;
  }

  graph = document.getElementById("graph");
  var c = graph.getContext('2d');

  graph.width = 600;
  graph.height = 300;

  c.lineWidth = 2;
  c.strokeStyle = '#333';
  c.font = 'italic 8pt sans-serif';
  c.textAlign = "center";

  // Draw the axises
  c.beginPath();
  c.moveTo(xPadding, 0);
  c.lineTo(xPadding, graph.height - yPadding);
  c.lineTo(graph.width, graph.height - yPadding);
  c.stroke();

  // Draw the X value texts
  for(var i = 0; i < data.length; i ++) {
      // uses data[i].X
      c.fillText(data[i].X, getXPixel(data[i].X), graph.height - yPadding + 20);
  }

  // Draw the Y value texts
  c.textAlign = "right"
  c.textBaseline = "middle";

  for(var i = 0; i < getMaxY(); i += 10) {
      c.fillText(i, xPadding - 10, getYPixel(i));
  }

  c.strokeStyle = '#f00';

  // Draw the line graph
  c.beginPath();
  c.moveTo(getXPixel(data[0].X), getYPixel(data[0].Y));
  for(var i = 1; i < data.length; i ++) {
      c.lineTo(getXPixel(data[i].X), getYPixel(data[i].Y));
  }
  c.stroke();

  // Draw the dots
  c.fillStyle = '#333';

  for(var i = 0; i < data.length; i ++) {
      c.beginPath();
      c.arc(getXPixel(data[i].X), getYPixel(data[i].Y), 4, 0, Math.PI * 2, true);
      c.fill();
  }
</script>
